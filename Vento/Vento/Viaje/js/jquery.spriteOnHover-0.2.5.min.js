/*!
 * jQuery spriteOnHover Plugin 
 * Examples and documentation at: http://apolinariopassos.com.br/dev/spriteonhover
 * Copyright (c) 2012
 * Author: João Paulo Apolinário Passos	
 * Version: 0.2.5
 * Licenced under the DWTFYWT public license.
 * http://apolinariopassos.com.br/dev/license
 * Requires: jQuery v1.3.1 or later
 */
 
(function( $ ){
	var toPauseAll = false;
	$.fn.pauseAll = function(){
		toPauseAll = true;
	}
	$.fn.resumeAll = function(){
		toPauseAll = false;
	}
	$.fn.spriteOnHover = function(args){
		var args=$.extend({fps:30,orientation:"horizontal",rewind:true,loop:false,autostart:false,repeat:true,onComplete:null,onStart:null,onInstance:null},args);
		var fps=args.fps;
		var sprite_orientation=args.orientation;
		var rewind=args.rewind;
		var loop=args.loop;
		var autostart=args.autostart;
		var repeat=args.repeat;
		var complete=args.onComplete;
		var start=args.onStart;
		var onInstance=args.onInstance;
		var toPause = false;
		var toRemove = false;
		if(rewind!=false&&rewind!="unanimate"){
			rewind=true
		}
		if(sprite_orientation!="vertical"||sprite_orientation===undefined){
			sprite_orientation="horizontal"
		}
		var looper_in;
		var looper_out;
		var path=$(this).css("background-image").replace("url","").replace("(","").replace(")","").replace('"',"").replace('"',"");
		var count=$('img[id^="tempImg"]').length+1;
		var tempImg='<img style="max-width: none !important;width: auto!important;min-width: none!important;max-height:none !important;height: auto !important;min-height:none !important" id="tempImg'+count+'" src="'+path+' "/>';
		$("body").append(tempImg);
		$("#tempImg"+count).hide();
		var frame_width=$(this).width();
		var frame_height=$(this).height();
		var this_parent=$(this);
		$("#tempImg"+count).load(function(){
			function g(){
				if(!a){
					e=b;
					var g=0;
					var h=false;
					var i=false;
					looper_in=setInterval(function(){
						if(toRemove) {
							$(this_parent).css("background-position","0px 0px");
							clearInterval(looper_in);
							return;
						}
						if(toPauseAll) return;
						if(toPause) {
							$(this_parent).css("background-position","0px 0px");
							return;
						}
						g++;f=true;
						$(this_parent).mouseleave(function(){
							if(loop!="infinite"){
								g=d;h=true;
								if(!i){
									if(!repeat)a=true;
								}
							}
						});
						if(repeat){
							var j=$(this_parent).css("background-position").split(" ");
							if(sprite_orientation=="horizontal") var k=j[0]; else var k=j[1];
							if(parseInt(k)*-1==b*(d-1)&&h){
								clearInterval(looper_in);
								f=false;
								a=false;
								i=true;
							}
						}
						if(g==d){
							if(loop==true||loop=="infinite"){
								$(this_parent).css("background-position","0px 0px");
								e=b;
								g=0;
								if(start) start($(this));
							} else {
								clearInterval(looper_in);
								f=false
							}
							if(!repeat)a=true;
							if(complete) complete($(this));
						} else {
							if(e<=c-b) if(sprite_orientation=="horizontal"){
								$(this_parent).css("background-position","-"+e+"px 0px");
							} else {
								$(this_parent).css("background-position","0px -"+e+"px");
							}e=e+b
						}
					},parseInt(1e3/fps))
				}
			}
			function h(){
				console.log('h');
				if(rewind==true){
					var g=0;
					looper_out=setInterval(function(){
						if(toRemove) {
							$(this_parent).css("background-position","0px 0px");
							clearInterval(looper_out);
							return;
						}
						if(toPauseAll) return;
						if(toPause) {
							$(this_parent).css("background-position","0px 0px");
							return;
						}
						g++;
						var h=$(this_parent).css("background-position").split(" ");
						if(sprite_orientation=="horizontal") var i=h[0];
						else var i=h[1];
						if(g==d||parseInt(i)==0){
							f=false;
							if(repeat)a=false;
							$(this_parent).css("background-position","0px 0px");
							clearInterval(looper_out);
							if(start) start($(this));
						}
						e=e-b;
						if(e<=c-b){
							if(sprite_orientation=="horizontal") $(this_parent).css("background-position","-"+e+"px 0px");
							else $(this_parent).css("background-position","0px -"+e+"px");
						}
					}, parseInt(1e3/fps))
				} else {
					a=true;
					f=false;
				}
			}
			function remove(){
				console.log('remove');
				toRemove = true;
			}
			function pause(){
				console.log('pause');
				toPause = true;
			}
			function resume(){
				console.log('resume');
				toPause = false;
			}
			function update(){
				console.log('update');
				
			}
			if(onInstance) {
				onInstance({pause:pause,resume:resume,update:update,remove:remove,isRemoved:toRemove});
			}
			var a=false;
			if(sprite_orientation=="horizontal"){
				var b=$(this_parent).width();
				var c=$(this).width();
			} else {
				var c=$(this).height();
				var b=$(this_parent).height();
			}
			var d=c/b;
			var e=b;
			var f=false;
			var a=false;
			if(autostart==true){
				g();
				if(loop!="infinite"){
					autostart=false;
				}
			}
			$(this_parent).hover(function(){
				if(looper_out!=undefined){
					clearInterval(looper_out);
				}if(!autostart){
					if(!f)g();
				}
				},function(){
					if(loop==false&&rewind==true){
						h();
						if(repeat)a=false;
						clearInterval(looper_in)
					} else if(loop!="infinite"){
						if(rewind=="unanimate"){
							$(this_parent).css("background-position","0px 0px");
							clearInterval(looper_in);
							if(repeat)a=false;
							f=false
							if(start) start($(this));
						} else if(!autostart){
							if(rewind==true&&loop!="infinite"){
								h();
								if(repeat)a=false;
								clearInterval(looper_in)
							} else if(rewind==false&&loop!="infinite"){
									if(repeat)a=false;
							}
						}
					}
				});
			$(this).remove();
		}
	)}
})( jQuery );